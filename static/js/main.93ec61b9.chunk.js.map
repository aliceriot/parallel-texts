{"version":3,"sources":["Document.js","App.js","index.js"],"names":["md","Remarkable","splitTags","string","div","document","createElement","innerHTML","Object","toConsumableArray","children","map","child","outerHTML","MarkdownElement","_ref","react_default","a","className","dangerouslySetInnerHTML","__html","Document","props","textOne","textTwo","tags","zip","render","_ref2","_ref3","slicedToArray","elOne","elTwo","Document_MarkdownElement","App","_useState","useState","_useState2","setTextOne","_useState3","_useState4","setTextTwo","onChange","e","target","value","ReactDOM","src_App","getElementById"],"mappings":"uLAIMA,EAAK,SAAIC,GAETC,EAAY,SAAAC,GAChB,IAAMC,EAAMC,SAASC,cAAc,OAEnC,OADAF,EAAIG,UAAYJ,EACTK,OAAAC,EAAA,EAAAD,CAAIJ,EAAIM,UAAUC,IAAI,SAAAC,GAAK,OAAIA,EAAMC,aAGxCC,EAAkB,SAAAC,GAAA,IAAEZ,EAAFY,EAAEZ,OAAF,OAAca,EAAAC,EAAAX,cAAA,OACpCY,UAAU,SACVC,wBAAyB,CAACC,OAAQjB,MAGrB,SAASkB,EAAUC,GAAO,IAC/BC,EAAqBD,EAArBC,QAASC,EAAYF,EAAZE,QAEXC,EAAOC,YACXxB,EAAUF,EAAG2B,OAAOJ,IACpBrB,EAAUF,EAAG2B,OAAOH,KAGtB,OAAOR,EAAAC,EAAAX,cAAA,OAAKY,UAAU,gBACnBO,EAAKd,IAAI,SAAAiB,GAAA,IAAAC,EAAArB,OAAAsB,EAAA,EAAAtB,CAAAoB,EAAA,GAAEG,EAAFF,EAAA,GAASG,EAATH,EAAA,UACRb,EAAAC,EAAAX,cAAA,OAAKY,UAAU,sBACbF,EAAAC,EAAAX,cAAC2B,EAAD,CAAiB9B,OAAQ4B,GAAS,KAClCf,EAAAC,EAAAX,cAAC2B,EAAD,CAAiB9B,OAAQ6B,GAAS,SCgB3BE,MA1Cf,WAAe,IAAAC,EACiBC,mBAAS,IAD1BC,EAAA7B,OAAAsB,EAAA,EAAAtB,CAAA2B,EAAA,GACNZ,EADMc,EAAA,GACGC,EADHD,EAAA,GAAAE,EAEiBH,mBAAS,IAF1BI,EAAAhC,OAAAsB,EAAA,EAAAtB,CAAA+B,EAAA,GAENf,EAFMgB,EAAA,GAEGC,EAFHD,EAAA,GAIb,OACExB,EAAAC,EAAAX,cAAA,OAAKY,UAAU,iBACbF,EAAAC,EAAAX,cAAA,OAAKY,UAAU,WACbF,EAAAC,EAAAX,cAAA,OAAKY,UAAU,UACbF,EAAAC,EAAAX,cAAA,OAAKY,UAAU,OACbF,EAAAC,EAAAX,cAAA,QAAMY,UAAU,SAAhB,YACAF,EAAAC,EAAAX,cAAA,YACEY,UAAU,WACVwB,SAAU,SAAAC,GACRL,EAAWK,EAAEC,OAAOC,WAI1B7B,EAAAC,EAAAX,cAAA,OAAKY,UAAU,OACbF,EAAAC,EAAAX,cAAA,QAAMY,UAAU,SAAhB,YACAF,EAAAC,EAAAX,cAAA,YACEY,UAAU,WACVwB,SAAU,SAAAC,GACRF,EAAWE,EAAEC,OAAOC,YAK5B7B,EAAAC,EAAAX,cAAA,OAAKY,UAAU,mBACbF,EAAAC,EAAAX,cAAA,QAAMY,UAAU,SAAhB,WACAF,EAAAC,EAAAX,cAACe,EAAD,CAAUE,QAASA,EAASC,QAASA,MAGzCR,EAAAC,EAAAX,cAAA,OAAKY,UAAU,qBAAf,wEAGAF,EAAAC,EAAAX,cAAA,OAAKY,UAAU,SACbF,EAAAC,EAAAX,cAACe,EAAD,CAAUE,QAASA,EAASC,QAASA,OClC7CsB,IAASnB,OAAOX,EAAAC,EAAAX,cAACyC,EAAD,MAAS1C,SAAS2C,eAAe","file":"static/js/main.93ec61b9.chunk.js","sourcesContent":["import React from 'react';\nimport { zip } from 'ramda'\nimport { Remarkable } from \"remarkable\"\n\nconst md = new Remarkable()\n\nconst splitTags = string => {\n  const div = document.createElement('div')\n  div.innerHTML = string\n  return [...div.children].map(child => child.outerHTML)\n}\n\nconst MarkdownElement = ({string}) => <div\n  className=\"pgraph\"\n  dangerouslySetInnerHTML={{__html: string}}\n/>\n\nexport default function Document (props) {\n  const { textOne, textTwo } = props\n\n  const tags = zip(\n    splitTags(md.render(textOne)),\n    splitTags(md.render(textTwo))\n  )\n\n  return <div className=\"parallel-doc\">\n    {tags.map(([elOne, elTwo]) => (\n      <div className=\"parallel-paragraph\">\n        <MarkdownElement string={elOne || \"\"} />\n        <MarkdownElement string={elTwo || \"\"} />\n      </div>\n    ))}\n  </div>\n}\n\n","import React, { useState } from \"react\"\nimport Document from \"./Document\"\n\nfunction App() {\n  const [textOne, setTextOne] = useState(\"\")\n  const [textTwo, setTextTwo] = useState(\"\")\n\n  return (\n    <div className=\"app main-page\">\n      <div className=\"noprint\">\n        <div className=\"inputs\">\n          <div className=\"col\">\n            <span className=\"label\">Text One</span>\n            <textarea\n              className=\"text-one\"\n              onChange={e => {\n                setTextOne(e.target.value)\n              }}\n            />\n          </div>\n          <div className=\"col\">\n            <span className=\"label\">Text Two</span>\n            <textarea\n              className=\"text-two\"\n              onChange={e => {\n                setTextTwo(e.target.value)\n              }}\n            />\n          </div>\n        </div>\n        <div className=\"dynamic-preview\">\n          <span className=\"label\">Preview</span>\n          <Document textOne={textOne} textTwo={textTwo} />\n        </div>\n      </div>\n      <div className=\"noprint help-text\">\n        Paste in your text, adjust till the preview looks right, then print!\n        </div>\n      <div className=\"print\">\n        <Document textOne={textOne} textTwo={textTwo} />\n      </div>\n    </div>\n  )\n}\n\nexport default App\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}