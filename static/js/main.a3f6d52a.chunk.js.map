{"version":3,"sources":["Document.js","App.js","index.js"],"names":["md","Remarkable","getParagraphs","string","split","filter","paragraph","MarkdownElement","_ref","react_default","a","createElement","className","dangerouslySetInnerHTML","__html","render","Document","props","textOne","textTwo","paragraphs","zip","map","_ref2","_ref3","Object","slicedToArray","elOne","elTwo","Document_MarkdownElement","App","_useState","useState","_useState2","setTextOne","_useState3","_useState4","setTextTwo","onChange","e","target","value","ReactDOM","src_App","document","getElementById"],"mappings":"gLAIMA,EAAK,SAAIC,GAETC,EAAgB,SAAAC,GAAM,OAAIA,EAAOC,MAAM,MAAMC,OAAO,SAAAC,GAAS,MAAkB,KAAdA,KAEjEC,EAAkB,SAAAC,GAAA,IAAEL,EAAFK,EAAEL,OAAF,OAAcM,EAAAC,EAAAC,cAAA,OACpCC,UAAU,SACVC,wBAAyB,CAACC,OAAQd,EAAGe,OAAOZ,OAG/B,SAASa,EAAUC,GAAO,IAC/BC,EAAqBD,EAArBC,QAASC,EAAYF,EAAZE,QAEXC,EAAaC,YACjBnB,EAAcgB,GACdhB,EAAciB,IAGhB,OAAOV,EAAAC,EAAAC,cAAA,OAAKC,UAAU,gBACnBQ,EAAWE,IAAI,SAAAC,GAAA,IAAAC,EAAAC,OAAAC,EAAA,EAAAD,CAAAF,EAAA,GAAEI,EAAFH,EAAA,GAASI,EAATJ,EAAA,UACdf,EAAAC,EAAAC,cAAA,OAAKC,UAAU,sBACbH,EAAAC,EAAAC,cAACkB,EAAD,CAAiB1B,OAAQwB,GAAS,KAClClB,EAAAC,EAAAC,cAACkB,EAAD,CAAiB1B,OAAQyB,GAAS,SCoB3BE,MA1Cf,WAAe,IAAAC,EACiBC,mBAAS,IAD1BC,EAAAR,OAAAC,EAAA,EAAAD,CAAAM,EAAA,GACNb,EADMe,EAAA,GACGC,EADHD,EAAA,GAAAE,EAEiBH,mBAAS,IAF1BI,EAAAX,OAAAC,EAAA,EAAAD,CAAAU,EAAA,GAENhB,EAFMiB,EAAA,GAEGC,EAFHD,EAAA,GAIb,OACE3B,EAAAC,EAAAC,cAAA,OAAKC,UAAU,iBACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,WACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,UACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACbH,EAAAC,EAAAC,cAAA,QAAMC,UAAU,SAAhB,YACAH,EAAAC,EAAAC,cAAA,YACEC,UAAU,WACV0B,SAAU,SAAAC,GACRL,EAAWK,EAAEC,OAAOC,WAI1BhC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACbH,EAAAC,EAAAC,cAAA,QAAMC,UAAU,SAAhB,YACAH,EAAAC,EAAAC,cAAA,YACEC,UAAU,WACV0B,SAAU,SAAAC,GACRF,EAAWE,EAAEC,OAAOC,YAK5BhC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,mBACbH,EAAAC,EAAAC,cAAA,QAAMC,UAAU,SAAhB,WACAH,EAAAC,EAAAC,cAACK,EAAD,CAAUE,QAASA,EAASC,QAASA,MAGzCV,EAAAC,EAAAC,cAAA,OAAKC,UAAU,qBAAf,wEAGAH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,SACbH,EAAAC,EAAAC,cAACK,EAAD,CAAUE,QAASA,EAASC,QAASA,OClC7CuB,IAAS3B,OAAON,EAAAC,EAAAC,cAACgC,EAAD,MAASC,SAASC,eAAe","file":"static/js/main.a3f6d52a.chunk.js","sourcesContent":["import React from 'react';\nimport { zip } from 'ramda'\nimport { Remarkable } from \"remarkable\"\n\nconst md = new Remarkable()\n\nconst getParagraphs = string => string.split('\\n').filter(paragraph => paragraph !== \"\")\n\nconst MarkdownElement = ({string}) => <div\n  className=\"pgraph\"\n  dangerouslySetInnerHTML={{__html: md.render(string)}}\n/>\n\nexport default function Document (props) {\n  const { textOne, textTwo } = props\n\n  const paragraphs = zip(\n    getParagraphs(textOne),\n    getParagraphs(textTwo)\n  )\n\n  return <div className=\"parallel-doc\">\n    {paragraphs.map(([elOne, elTwo]) => (\n      <div className=\"parallel-paragraph\">\n        <MarkdownElement string={elOne || \"\"} />\n        <MarkdownElement string={elTwo || \"\"} />\n      </div>\n    ))}\n  </div>\n}\n\n","import React, { useState } from \"react\"\nimport Document from \"./Document\"\n\nfunction App() {\n  const [textOne, setTextOne] = useState(\"\")\n  const [textTwo, setTextTwo] = useState(\"\")\n\n  return (\n    <div className=\"app main-page\">\n      <div className=\"noprint\">\n        <div className=\"inputs\">\n          <div className=\"col\">\n            <span className=\"label\">Text One</span>\n            <textarea\n              className=\"text-one\"\n              onChange={e => {\n                setTextOne(e.target.value)\n              }}\n            />\n          </div>\n          <div className=\"col\">\n            <span className=\"label\">Text Two</span>\n            <textarea\n              className=\"text-two\"\n              onChange={e => {\n                setTextTwo(e.target.value)\n              }}\n            />\n          </div>\n        </div>\n        <div className=\"dynamic-preview\">\n          <span className=\"label\">Preview</span>\n          <Document textOne={textOne} textTwo={textTwo} />\n        </div>\n      </div>\n      <div className=\"noprint help-text\">\n        Paste in your text, adjust till the preview looks right, then print!\n        </div>\n      <div className=\"print\">\n        <Document textOne={textOne} textTwo={textTwo} />\n      </div>\n    </div>\n  )\n}\n\nexport default App\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}